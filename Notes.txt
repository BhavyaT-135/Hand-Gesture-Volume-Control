Framework: Mediapipe by Google provides ML Solutions.
Hand Tracking: - Palm Detection
		- Hand Landmarks
Cross Platform format

-----------------------------------------
Packages

-opencv-python
-mediapipe

Pip install^^
-----------------------------------------
HandTrackingMin.py => Module for hand tracking
-----------------------------------------

cap => video object

------------------------------------------

The landmarks we get are ratios of the screen, we can multiply it to
the screensize to get the size.

We get the ids, and the landmarks as on x-axis and y-axis.

Transforming these landmarks to a list.

Later we can make a module out of this to create more projects.

--------------------------------------------
Module based project -> Will use a previously created module for 
hand tracking.

Setting the width cam and height cam, initializing the basic 
setup and creating object of the module.

The mediapipe website (google.github.io/mediapipe/solutions/hands) 
has all the information and values for the landmarks, i.e.
value no. 4 (for thumb tip) and 8 (for index finger tip).
---------------------------------------------

Midpoint of the circle transforms into green when the length
is reduced below 50.

----------------------------------------------
Packages

To change the volume of the Device, we will be using a python
Audio Windows library "pycaw" by AndreMiras on GitHub.

We need to Pip install the pycaw package using the following command:

>> pip install pycaw

----------------------------------------------

Making modifications and filterations:

* Find hands and filter it based on size. Since when we measure the
difference between the thumb and the index finger, it will give
us very small values. We aim to normalize these values by resizing
the hand and then check the difference.*

We need a bounding box of a hand, but the mediapipe library doesnt
supply this information by default. We will do this with the help of
self-written code.

# Filter based on size

# Find distance bw index and the thumb

# Convert Volume
	Changing linear scale into logrithmic scale.

# Reduce Resolution to make it smoother

# Check fingers up

# Check if pinky is down set volume

# Drawings

# Frame Rate


-----------------------------------------------